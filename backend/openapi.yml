openapi: 3.0.0
info:
  title: Flask SQLAlchemy RESTful API
  version: 1.0.0
  description: |
    - 產生的 OpenAPI 文件，對應 Flask + SQLAlchemy 所有 RESTful API。
    
    - 所有 API 回傳 JSON。

servers:
  - url: http://127.0.0.1:8000
    description: Development server
  
tags:
  - User
  - Job

paths:
  /user/{user_id}:
    get:
      tags: [User]
      summary: Get user by user_id
      parameters:
        - in: path
          name: user_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  user_id:
                    type: integer
                  email:
                    type: string
                  created_at:
                    type: string
                    format: date
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  
  /register:
    post:
      tags: [User]
      summary: Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: "0912345678"
                password:
                  type: string
                  example: "password123"
                email:
                  type: string
                  format: email
                  example: "user@example.com"
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
                  user_id:
                    type: integer
                    example: 1
        '400':
          description: Bad request - missing required fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Phone number and password are required"
        '409':
          description: Conflict - user already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "User already exists"

  /login:
    post:
      tags: [User]
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone_number
                - password
              properties:
                phone_number:
                  type: string
                  example: "0912345678"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: User login successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User login successfully"
                  user_id:
                    type: integer
                    example: 1
        '400':
          description: Bad request - missing required fields or invalid data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Phone number and password are required"
        '401':
          description: Unauthorized - invalid credentials
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Invalid phone number or password"
  
  /job/{job_id}:
    get:
      tags: [Job]
      summary: Get job by job_id
      parameters:
        - in: path
          name: job_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  job_id:
                    type: integer
                  job_name:
                    type: string
                  type:
                    type: string
                  payment:
                    type: string
                  date:
                    type: string
                  job_provider_id:
                    type: integer
                  created_at:
                    type: date
        '404':
          description: Job not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              
  /job/provider/{provider_id}:
    get:
      tags: [Job]
      summary: Get job by provider_id
      parameters:
        - in: path
          name: provider_id
          required: true
          schema:
            type: integer
      responses:  # 修正：response -> responses
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    job_id:
                      type: integer
                      example: 1
                    job_name:
                      type: string
                      example: "餐廳服務生"
                    type:
                      type: string
                      example: "服務業"
                    payment:
                      type: string
                      example: "200 - 300"
                    date:
                      type: string
                      example: "2023-12-31 - 2023-12-01"
                    job_provider_id:
                      type: integer
                      example: 1
                    create_at:
                      type: string
                      format: date
                      example: "2023-11-01"
        '404':
          description: Provider not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Provider is not exist"

  /job:
    post:
      tags: [Job]
      summary: Create new job
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - job_name
                - payment_low
                - payment_high
                - date_start
                - date_end
                - provider_id
              properties:
                job_name:
                  type: string
                  example: "餐廳服務生"
                payment_low:
                  type: integer
                  example: 200
                payment_high:
                  type: integer
                  example: 300
                date_start:
                  type: string
                  format: date
                  example: "2023-12-01"
                date_end:
                  type: string
                  format: date
                  example: "2023-12-31"
                job_type:
                  type: string
                  example: "服務業"
                provider_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Job created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Create Job Successfully"
                  Job:
                    type: object
                    properties:
                      job_id:
                        type: integer
                        example: 1
                      job_name:
                        type: string
                        example: "餐廳服務生"
        '400':
          description: Bad request - missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Lack of necessary information"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Create Job Failed"
                  error:
                    type: string
    get:
      tags: [Job]
      summary: Get all jobs
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    job_id:
                      type: integer
                      example: 1
                    job_name:
                      type: string
                      example: "餐廳服務生"
                    type:
                      type: string
                      example: "服務業"
                    payment:
                      type: string
                      example: "200 - 300"
                    date:
                      type: string
                      example: "2023-12-01 - 2023-12-31"
                    job_provider_id:
                      type: integer
                      example: 1
                    create_at:
                      type: string
                      format: date
                      example: "2023-11-01"
        '404':
          description: No jobs found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No jobs found"
